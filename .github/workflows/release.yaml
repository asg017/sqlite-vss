name: "Release"
on:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: read
env:
  ARTIFACT-LINUX-X86_64-EXTENSION: sqlite-vss-linux-x86_64
  ARTIFACT-MACOS-X86_64-EXTENSION: sqlite-vss-macos-x86_64
  ARTIFACT-WINDOWS-X86_64-EXTENSION: sqlite-vss-windows-x86_64
  ARTIFACT-MACOS-AARCH64-EXTENSION: sqlite-vss-macos-aarch64
jobs:
  build-macos-aarch64-extension:
    runs-on: flyci-macos-large-latest-m1
    steps:
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        run: ./vendor/get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make
      - run: brew install llvm
      - id: cache-cmake-build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build
      - run: make patch-openmp
      - run: make loadable-release static-release
        env:
          # `brew info libomp` gives the correct one, with .a file for static openmp builds
          CC: /usr/local/opt/llvm/bin/clang
          CXX: /usr/local/opt/llvm/bin/clang++
          LDFLAGS: "-L/usr/local/opt/libomp/lib/"
          CPPFLAGS: "-I/usr/local/opt/libomp/include/"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT-MACOS-AARCH64-EXTENSION }}
          path: dist/release/*
  build-linux-x86_64-extension:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        run: ./vendor/get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make

      # TODO how cache this?
      - run: sudo apt-get install -y cmake libgomp1
      - run: make loadable-release static-release
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT-LINUX-X86_64-EXTENSION }}
          path: dist/release/*
  build-macos-x86_64-extension:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        run: ./vendor/get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make
      - run: brew install llvm
      - id: cache-cmake-build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build
      - run: make patch-openmp
      - run: make loadable-release static-release
        env:
          # `brew info libomp` gives the correct one, with .a file for static openmp builds
          CC: /usr/local/opt/llvm/bin/clang
          CXX: /usr/local/opt/llvm/bin/clang++
          LDFLAGS: "-L/usr/local/opt/libomp/lib/"
          CPPFLAGS: "-I/usr/local/opt/libomp/include/"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT-MACOS-X86_64-EXTENSION }}
          path: dist/release/*
  upload-extensions:
    needs:
      [
        build-macos-x86_64-extension,
        build-macos-aarch64-extension,
        build-linux-x86_64-extension,
      ]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      checksums: ${{ steps.upload-spm.outputs.asset-checksums }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: asg017/upload-spm@main
        id: upload-spm
        with:
          name: sqlite-vss
          github-token: ${{ secrets.GITHUB_TOKEN }}
          platforms: |
            macos-x86_64:     ${{ env.ARTIFACT-MACOS-X86_64-EXTENSION }}/*
            macos-aarch64:    ${{ env.ARTIFACT-MACOS-AARCH64-EXTENSION }}/*
            linux-x86_64:     ${{ env.ARTIFACT-LINUX-X86_64-EXTENSION }}/*
